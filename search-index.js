var searchIndex = {};
searchIndex["game_of_life"] = {"doc":"","items":[[0,"cell","game_of_life","",null,null],[3,"Cell","game_of_life::cell","This struct represents a living cell.",null,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"cell"}}],[11,"new","","Create a new cell a given position.",0,{"inputs":[{"name":"place"}],"output":{"name":"cell"}}],[11,"get_position","","Get the position of the cell.",0,{"inputs":[{"name":"self"}],"output":{"name":"place"}}],[0,"config","game_of_life","",null,null],[3,"Config","game_of_life::config","This struct holds the configuration for the game.",null,null],[5,"create_config","","Creates a new config from the arguments matcher. This function validates the values and throws an error if not met requirements.",null,{"inputs":[{"name":"argmatches"}],"output":{"name":"config"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"config"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"config"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"config"}}],[11,"get_width","","Get the width of the space the population have.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"get_height","","Get the height of the space the population have.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"get_sleep","","Seconds to sleep between the population's iterations.",1,{"inputs":[{"name":"self"}],"output":{"name":"duration"}}],[0,"place","game_of_life","",null,null],[3,"Place","game_of_life::place","This struct represents a place.",null,null],[5,"distance","","This function calculates the distance of two places.",null,{"inputs":[{"name":"place"},{"name":"place"}],"output":{"name":"f64"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"place"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"place"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"place"}}],[11,"new","","Create a new place.",2,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"place"}}],[11,"get_x","","Get the x-position of this place.",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"get_y","","Get the y-position of this place.",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"population","game_of_life","",null,null],[3,"Population","game_of_life::population","This struct describes a population of cells.",null,null],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"population"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"population"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"population"}}],[11,"new","","Create a new population.",3,{"inputs":[{"name":"usize"},{"name":"usize"},{"generics":["cell"],"name":"vec"}],"output":{"name":"population"}}],[11,"next_generation","","",3,{"inputs":[{"name":"self"}],"output":{"name":"population"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"screen","game_of_life","",null,null],[5,"print_header","game_of_life::screen","Prints the game header.",null,{"inputs":[],"output":null}],[5,"clear","","Clears the screen.",null,{"inputs":[],"output":null}]],"paths":[[3,"Cell"],[3,"Config"],[3,"Place"],[3,"Population"]]};
initSearch(searchIndex);
